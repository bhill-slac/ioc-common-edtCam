# CONFIG_SITE

# Make any application-specific changes to the EPICS build
# configuration variables in this file.
#
# Host/target specific settings can be specified in files named
#  CONFIG_SITE.$(EPICS_HOST_ARCH).Common
#  CONFIG_SITE.Common.$(T_A)
#  CONFIG_SITE.$(EPICS_HOST_ARCH).$(T_A)

# Set this when you only want to compile this application
# for a subset of the cross-compiled target architectures
# that Base is built for.
# CROSS_COMPILER_TARGET_ARCHS = RTEMS-beatnik linux-x86 linux-x86_64

CROSS_COMPILER_TARGET_ARCHS     =
# PCDS: Only build the linux-x86 cross target if host is linux-x86_64
ifeq '$(EPICS_HOST_ARCH)' 'rhel6-x86_64'
CROSS_COMPILER_TARGET_ARCHS    +=  linuxRT_glibc-x86_64
endif
ifeq '$(EPICS_HOST_ARCH)' 'linux-x86_64'
CROSS_COMPILER_TARGET_ARCHS    =
endif

# If you do NOT want to build for the host architecture,
# clear BUILD_FOR_HOST_ARCH
# BUILD_FOR_HOST_ARCH = 

# Configure which 3rd party libraries to use and where to find them.
# For each library XXX the following definitions are used:
# WITH_XXX      Build the plugins and drivers that require this library.
#               Build the source code for this library in ADSupport if XXX_EXTERNAL=NO.
# XXX_EXTERNAL  If NO then build the source code for this library in ADSupport.
# XXX_INCLUDE   If XXX_EXTERNAL=YES then this is the path to the include files for XXX.
#               However, if XXX is a system library whose include files are in a 
#               standard include search path then do not define XXX_INCLUDE.
# XXX_LIB       If XXX_EXTERNAL=YES then this is the path to the library files for XXX.
#               However, if XXX is a system library whose library files in a 
#               standard library search path then do not define XXX_LIB.
#

# BOOST is required for the ADCore/pluginTests unit tests
WITH_BOOST     = NO
#BOOST_LIB     =
#BOOST_INCLUDE =

# EPICS_V4 is required for NDPluginPva and pvaDriver
WITH_EPICS_V4  = YES

# GraphicsMagick is required for NDFileMagick and the URL driver.
WITH_GRAPHICSMAGICK     = NO
GRAPHICSMAGICK_EXTERNAL = YES
#GRAPHICSMAGICK_INCLUDE =
#GRAPHICSMAGICK_LIB     =

# HDF5 is required for the NDFileHDF5 and NDFileNexus plugins
WITH_HDF5     = YES
HDF5_EXTERNAL = NO
#HDF5_INCLUDE =
#HDF5_LIB     =

# JPEG is required for the NDFileJPEG and NDFileTIFF plugins
WITH_JPEG     = YES
JPEG_EXTERNAL = NO
#JPEG_INCLUDE =
#JPEG_LIB     =

# JPEG is required for the NDFileNetCDF plugin
WITH_NETCDF     = YES
NETCDF_EXTERNAL = NO
#NETCDF_INCLUDE =
#NETCDF_LIB     =

# NEXUS is required for the NDFileNexus plugin
WITH_NEXUS     = YES
NEXUS_EXTERNAL = NO
#NEXUS_INCLUDE =
#NEXUS_LIB     =

# OPENCV is required for the ADPluginEdge plugin
WITH_OPENCV     = NO
OPENCV_EXTERNAL = YES
#OPENCV_INCLUDE =
#OPENCV_LIB     =

# SZIP is required for the NDFileHDF5 and NDFileNexus plugins.  
# This may be optional in the future.
WITH_SZIP     = YES
SZIP_EXTERNAL = NO
#SZIP_INCLUDE =
#SZIP_LIB     =

# TIFF is required for the NDFileTIFF plugin.
WITH_TIFF     = YES
TIFF_EXTERNAL = NO
#TIFF_INCLUDE =
#TIFF_LIB     =

# XML2 is required for the NDFileHDF5 and NDFileNexus plugins.  
WITH_XML2     = YES
XML2_EXTERNAL = NO
#XML2_INCLUDE =
#XML2_LIB     =

# ZLIB is required for the NDFileHDF5 and NDFileNexus plugins.  
# This may be optional in the future.
WITH_ZLIB     = YES
ZLIB_EXTERNAL = NO
#ZLIB_INCLUDE =
#ZLIB_LIB     =

# To install files into a location other than $(TOP) define
#   INSTALL_LOCATION here.
#INSTALL_LOCATION=</path/name/to/install/top>

# Set this when your IOC and the host use different paths
# to access the application. This will be needed to boot
# from a Microsoft FTP server or with some NFS mounts.
# You must rebuild in the iocBoot directory for this to
# take effect.
#IOCS_APPL_TOP = <path to application top as seen by IOC>

# If you don't want to install into $(TOP) then
# define INSTALL_LOCATION here

# Settings for static and shared build options
STATIC_BUILD=YES
SHARED_LIBRARIES=YES

ifneq '$(wildcard $(EVENT2))' ''
USR_CFLAGS += -DUSE_EVR_IRQ_HANDLER
endif

# Add PCRE libs
# NOTE: edtCam ioc only needs PCRE because streamdevice is usually built to need it
ifndef PSPKG_ROOT
ifneq ($(wildcard /reg/g/pcds/pkg_mgr))
PSPKG_ROOT	= /reg/g/pcds/pkg_mgr
else
PSPKG_ROOT	= /afs/slac/g/lcls/pkg_mgr
endif
endif

PKG_ARCH    = $(T_A)
#ifeq '$(PKG_ARCH)' 'linuxRT_glibc-x86_64'
#PKG_ARCH    = rhel6-x86_64
#endif
PCRE_TOP		= $(PSPKG_ROOT)/release/pcre/8.37/$(PKG_ARCH)

ifneq (,$(wildcard $PCRE_TOP))
PCRE_INCLUDE	= $(PCRE_TOP)/include
PCRE_LIB		= $(PCRE_TOP)/lib
endif
