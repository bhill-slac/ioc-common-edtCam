#
# colorViewer.substitutions
#
# Required macros when loaded as colorViewer.db:
#
#
# Each color viewer has one set of viewer control records,
# along with the following plugin sequence:
#	NDColorConvert	- Converts from raw camera bayer format to RGB or monochrome
#	NDROI			- Handles binning and ROI control for this viewer
#	NDOverlay		- Adds configurable cross markers, and boxes,
#						including the ROI configuration feedback.
#	NDStdArray		- Converts internal NDArray data to a waveform record
#

# 
# viewerControls.template macros:
#	VIEWER:			PV Prefix
#	BINNING:		Binning factor for this viewer, (1..N)
#	COLOR_MODE:		Mono or RGB1
file viewerControls.template
{
	{
		VIEWER		= "$(CAM):$(IMG)",
		BINNING		= "$(BINNING)",
		COLOR_MODE	= "$(COLOR_MODE)"
	}
}

# 
# NDPluginBase macros:
# NDARRAY_PORT:		PLUGIN_SRC
# PORT:				Asyn port name 
# P:				PV Prefix	$(P)$(R)
# R:				PV Root		$(P)$(R)
file NDPluginBase.template
{
	pattern
	{	NDARRAY_PORT,	PORT,			P,			R,			BIT_DEPTH			}
	{	$(CAM_PORT),	$(IMG):CC,		$(CAM):,	$(PORT):,	$(IMAGE_BIT_DEPTH)	}
	{	$(IMG):CC,		$(IMG):ROI,		$(CAM):,	$(PORT):,	$(IMAGE_BIT_DEPTH)	}
	{	$(IMG):ROI,		$(IMG):Over,	$(CAM):,	$(PORT):,	$(IMAGE_BIT_DEPTH)	}
	{	$(IMG):Over,	$(IMG),			$(CAM):,	$(PORT):,	$(IMAGE_BIT_DEPTH)	}
}

file NDColorConvert.template
{
	{
	PORT	= $(IMG):CC,
	P		= $(CAM):,
	R		= $(PORT):,
	}
}

file NDROI.template
{
	{
	PORT	= $(IMG):ROI,
	P		= $(CAM):,
	R		= $(PORT):,
	}
}

file NDOverlay.template
{
	{
	PORT	= $(IMG):Over,
	P		= $(CAM):,
	R		= $(PORT):,
	}
}

#
# SHAPE:	0 = cross, 1 = rectangle
#
file NDOverlayN.template
{
	pattern
	{ ADDR,	R,				NAME,		SHAPE,	PORT,			O,			P		}
	{ 0,	$(O)Cross1:,	Cross1,		0,		$(IMG):Over,	$(PORT):,	$(CAM):	}
	{ 1,	$(O)Cross2:,	Cross2,		0,		$(IMG):Over,	$(PORT):,	$(CAM):	}
	{ 2,	$(O)Cross3:,	Cross3,		0,		$(IMG):Over,	$(PORT):,	$(CAM):	}
	{ 3,	$(O)Cross4:,	Cross4,		0,		$(IMG):Over,	$(PORT):,	$(CAM):	}
	{ 4,	$(O)ROI:,		ROI,		1,		$(IMG):Over,	$(PORT):,	$(CAM):	}
	{ 5,	$(O)Box1:,		Box1,		1,		$(IMG):Over,	$(PORT):,	$(CAM):	}
}


# And finally the conversion to a std array waveform
file NDStdArrays.template
{
	{
	PORT	 	= $(IMG),
	P	 		= $(CAM):,
	R	 		= $(PORT):,
	TYPE	 	= $(IMAGE_TYPE),
	FTVL	 	= $(IMAGE_FTVL),
	NELEMENTS 	= $(IMAGE_NELM),
	}
}
